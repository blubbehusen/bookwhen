[2020-08-24T16:36:37.910523+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2020-08-24T16:36:37.913713+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::__set_state(array(    'instanceToken' => '6v47r0jdz3r2ao3yc8f1vyx2kjry',    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'validator' =>    InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',       )),       'handler' =>        GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )),    'logging' => 'debug',    'log' => 'inShoreBookwhen.log',    'logger' =>    Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        Monolog\Handler\StreamHandler::__set_state(array(          'stream' => NULL,          'url' => '/Users/danielmullin/Local/inShore/000/9/bookwhen/inShoreBookwhen.log',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,          'level' => 100,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          Monolog\Formatter\LineFormatter::__set_state(array(            'format' => '[2020-08-24T16:36:37.913713+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => NULL,            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2098496,         )),       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,   )), )) [] []
[2020-08-24T16:36:37.919658+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/attachments, array (   'headers' =>    array (     'Authorization' => 'Basic NnY0N3IwamR6M3IyYW8zeWM4ZjF2eXgya2pyeTo=',   ), )) [] []
[2020-08-24T16:36:37.937764+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2020-08-24T16:36:37.937988+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::__set_state(array(    'instanceToken' => '6v47r0jdz3r2ao3yc8f1vyx2kjry',    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'validator' =>    InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',       )),       'handler' =>        GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )),    'logging' => 'debug',    'log' => 'inShoreBookwhen.log',    'logger' =>    Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        Monolog\Handler\StreamHandler::__set_state(array(          'stream' => NULL,          'url' => '/Users/danielmullin/Local/inShore/000/9/bookwhen/inShoreBookwhen.log',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,          'level' => 100,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          Monolog\Formatter\LineFormatter::__set_state(array(            'format' => '[2020-08-24T16:36:37.937988+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => NULL,            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2098496,         )),       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,   )), )) [] []
[2020-08-24T16:36:37.944663+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2020-08-24T16:36:37.944909+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::__set_state(array(    'instanceToken' => '6v47r0jdz3r2ao3yc8f1vyx2kjry',    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'validator' =>    InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',       )),       'handler' =>        GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )),    'logging' => 'debug',    'log' => 'inShoreBookwhen.log',    'logger' =>    Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        Monolog\Handler\StreamHandler::__set_state(array(          'stream' => NULL,          'url' => '/Users/danielmullin/Local/inShore/000/9/bookwhen/inShoreBookwhen.log',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,          'level' => 100,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          Monolog\Formatter\LineFormatter::__set_state(array(            'format' => '[2020-08-24T16:36:37.944909+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => NULL,            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2098496,         )),       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,   )), )) [] []
[2020-08-24T16:36:37.946544+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/attachments/9v06h1cbv0en, array (   'headers' =>    array (     'Authorization' => 'Basic NnY0N3IwamR6M3IyYW8zeWM4ZjF2eXgya2pyeTo=',   ), )) [] []
[2020-08-24T16:36:37.947502+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2020-08-24T16:36:37.947698+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::__set_state(array(    'instanceToken' => '6v47r0jdz3r2ao3yc8f1vyx2kjry',    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'validator' =>    InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',       )),       'handler' =>        GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )),    'logging' => 'debug',    'log' => 'inShoreBookwhen.log',    'logger' =>    Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        Monolog\Handler\StreamHandler::__set_state(array(          'stream' => NULL,          'url' => '/Users/danielmullin/Local/inShore/000/9/bookwhen/inShoreBookwhen.log',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,          'level' => 100,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          Monolog\Formatter\LineFormatter::__set_state(array(            'format' => '[2020-08-24T16:36:37.947698+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => NULL,            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2098496,         )),       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,   )), )) [] []
[2020-08-24T16:36:37.952662+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/events/ev-sf8b-20200813100000, array (   'headers' =>    array (     'Authorization' => 'Basic NnY0N3IwamR6M3IyYW8zeWM4ZjF2eXgya2pyeTo=',   ), )) [] []
[2020-08-24T16:36:37.953883+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2020-08-24T16:36:37.954037+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::__set_state(array(    'instanceToken' => '6v47r0jdz3r2ao3yc8f1vyx2kjry',    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'validator' =>    InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',       )),       'handler' =>        GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )),    'logging' => 'debug',    'log' => 'inShoreBookwhen.log',    'logger' =>    Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        Monolog\Handler\StreamHandler::__set_state(array(          'stream' => NULL,          'url' => '/Users/danielmullin/Local/inShore/000/9/bookwhen/inShoreBookwhen.log',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,          'level' => 100,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          Monolog\Formatter\LineFormatter::__set_state(array(            'format' => '[2020-08-24T16:36:37.954037+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => NULL,            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2098496,         )),       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,   )), )) [] []
[2020-08-24T16:36:37.954810+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/tickets, array (   'headers' =>    array (     'Authorization' => 'Basic NnY0N3IwamR6M3IyYW8zeWM4ZjF2eXgya2pyeTo=',   ), )) [] []
[2020-08-24T16:36:37.955252+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2020-08-24T16:36:37.955389+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::__set_state(array(    'instanceToken' => '6v47r0jdz3r2ao3yc8f1vyx2kjry',    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'validator' =>    InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',       )),       'handler' =>        GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )),    'logging' => 'debug',    'log' => 'inShoreBookwhen.log',    'logger' =>    Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        Monolog\Handler\StreamHandler::__set_state(array(          'stream' => NULL,          'url' => '/Users/danielmullin/Local/inShore/000/9/bookwhen/inShoreBookwhen.log',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,          'level' => 100,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          Monolog\Formatter\LineFormatter::__set_state(array(            'format' => '[2020-08-24T16:36:37.955389+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => NULL,            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2098496,         )),       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,   )), )) [] []
[2020-08-24T16:36:37.956274+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2020-08-24T16:36:37.956394+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::__set_state(array(    'instanceToken' => '6v47r0jdz3r2ao3yc8f1vyx2kjry',    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'validator' =>    InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',       )),       'handler' =>        GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )),    'logging' => 'debug',    'log' => 'inShoreBookwhen.log',    'logger' =>    Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        Monolog\Handler\StreamHandler::__set_state(array(          'stream' => NULL,          'url' => '/Users/danielmullin/Local/inShore/000/9/bookwhen/inShoreBookwhen.log',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,          'level' => 100,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          Monolog\Formatter\LineFormatter::__set_state(array(            'format' => '[2020-08-24T16:36:37.956394+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => NULL,            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2098496,         )),       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,   )), )) [] []
[2020-08-24T16:36:37.956638+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/tickets, array (   'headers' =>    array (     'Authorization' => 'Basic NnY0N3IwamR6M3IyYW8zeWM4ZjF2eXgya2pyeTo=',   ),   'query' =>    array (     'event' => 'ev-sf8b-20200813100000',   ), )) [] []
[2020-08-24T16:36:37.956837+00:00] inShore Bookwhen API.DEBUG: array (   0 =>    (object) array(      'id' => 'ti-sboe-20200320100000-tk1m',      'type' => 'ticket',      'attributes' =>      (object) array(        'title' => 'Single ticket',        'details' => 'More details about the ticket etc.',        'number_issued' => 10,        'number_taken' => 7,        'course_ticket' => false,        'group_ticket' => false,        'group_min' => 3,        'group_max' => 5,        'available' => true,        'available_from' => '2020-08-09T18:22:00.586Z',        'available_to' => '2020-08-09T18:22:00.586Z',        'cost' =>        (object) array(          'currency_code' => 'USD',          'net' => 1000,          'tax' => 0,       ),        'built_basket_iframe_url' => '/pagecode/iframe/basket_items/apply?basket_item_ids%5Bti-sboe-20200320100000-tk1m%5D=1',        'built_basket_url' => '/pagecode/basket_items/apply?basket_item_ids%5Bti-sboe-20200320100000-tk1m%5D=1',     ),      'relationships' =>      (object) array(        'events' =>        (object) array(          'data' =>          array (           0 =>            (object) array(              'id' => 'ev-sboe-20200320100000',              'type' => 'event',           ),         ),          'links' =>          (object) array(            'related' => 'https://api.bookwhen.com/v2/tickets/ti-sboe-20200320100000-tk1m/events',            'self' => 'https://api.bookwhen.com/v2/tickets/ti-sboe-20200320100000-tk1m/relationships/events',         ),       ),        'class_passes' =>        (object) array(          'data' =>          array (           0 =>            (object) array(              'id' => 'cp-vk3x1brhpsbf',              'type' => 'class_pass',           ),         ),          'links' =>          (object) array(            'related' => 'https://api.bookwhen.com/v2/tickets/ti-sboe-20200320100000-tk1m/class_passes',            'self' => 'https://api.bookwhen.com/v2/tickets/ti-sboe-20200320100000-tk1m/relationships/class_passes',         ),       ),     ),      'links' =>      (object) array(        'self' => 'https://api.bookwhen.com/v2/tickets/ti-sboe-20200320100000-tk1m',     ),      'included' =>      array (       0 =>        (object) array(       ),     ),   ), ) [] []
